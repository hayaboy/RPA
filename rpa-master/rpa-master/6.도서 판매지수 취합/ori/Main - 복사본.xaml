<?xml version="1.0" encoding="utf-8"?>
<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="714.4,3032.8" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="23">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="38">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="도서 정보 취합" sap:VirtualizedContainerService.HintSize="694.4,2932.8" sap2010:WorkflowViewState.IdRef="Sequence_4">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dtBookList" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtKeyAndPoint" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtSalePoint" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtAladin" />
      <Variable x:TypeArguments="ui:GenericValue" Name="intSalePoint" />
      <Variable x:TypeArguments="sd:DataRow" Name="drSalePoint" />
      <Variable x:TypeArguments="s:DateTime" Name="dateLastDay" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="652.8,771.2" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_7" WorkbookPath="도서목록.xlsx">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="619.2,661.6" sap2010:WorkflowViewState.IdRef="Sequence_17">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="strReason" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelReadCell Cell="L1" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="577.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" SheetName="Sheet1">
              <ui:ExcelReadCell.Result>
                <OutArgument x:TypeArguments="s:DateTime">[dateLastDay]</OutArgument>
              </ui:ExcelReadCell.Result>
            </ui:ExcelReadCell>
            <If Condition="[dateLastDay = Today]" sap:VirtualizedContainerService.HintSize="577.6,209.6" sap2010:WorkflowViewState.IdRef="If_3">
              <If.Then>
                <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1" Reason="이미 오늘 날짜가 있어서 종료합니다." />
              </If.Then>
              <If.Else>
                <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[&quot;오늘 날짜의 도서 판매지수를 가져오겠습니다.&quot;]" />
              </If.Else>
            </If>
            <ui:ExcelCopyPasteRange sap2010:Annotation.AnnotationText="2-1. 엑셀 파일에서 최근 6일의 판매지수를 왼쪽으로 한 칸 옮기고," DestinationCell="F1:K20" DestinationSheet="Sheet1" DisplayName="Copy Paste Range" sap:VirtualizedContainerService.HintSize="577.6,82.4" sap2010:WorkflowViewState.IdRef="ExcelCopyPasteRange_3" SheetName="Sheet1" SourceRange="G1:L20">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelCopyPasteRange>
            <ui:ExcelWriteCell sap2010:Annotation.AnnotationText="어제 날짜 열 이름을 오늘 날짜로 바꾼다." Cell="L1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="577.6,96.8" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="Sheet1" Text="[System.DateTime.Now.ToShortDateString]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelWriteCell>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="652.8,293.6" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" WorkbookPath="도서목록.xlsx">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="375.2,184" sap2010:WorkflowViewState.IdRef="Sequence_11">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelReadRange AddHeaders="True" sap2010:Annotation.AnnotationText="2-2. 엑셀 파일에서 검색용 키워드를 가져온 뒤," DataTable="[dtKeyAndPoint]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="333.6,91.2" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" SheetName="Sheet1">
              <ui:ExcelReadRange.Range>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:ExcelReadRange.Range>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelReadRange>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
    <ui:AddDataColumn x:TypeArguments="x:Int32" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" sap2010:Annotation.AnnotationText="판매지수를 입력할 열을 추가한다." ColumnName="판매지수" DataTable="[dtKeyAndPoint]" DefaultValue="0" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="652.8,66.4" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:AddDataColumn>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="1-3. Main 워크플로에서 서점 워크플로를 실행하고 인수를 가져와서" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="652.8,112.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="ori/예스24_ori.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dtBookList">[dtBookList]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="652.8,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="ori/알라딘.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dtBookList">[dtAladin]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:MergeDataTable sap2010:Annotation.AnnotationText="테이블 하나로 합친다." Destination="[dtBookList]" DisplayName="Merge Data Table" sap:VirtualizedContainerService.HintSize="652.8,53.6" sap2010:WorkflowViewState.IdRef="MergeDataTable_1" MissingSchemaAction="Add" Source="[dtAladin]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:MergeDataTable>
    <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtKeyAndPoint]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="652.8,757.6" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="524.8,608.8" sap2010:WorkflowViewState.IdRef="Sequence_13">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If sap2010:Annotation.AnnotationText="검색용 키워드가 있는 경우만 실행한다." Condition="[row(&quot;검색용 키워드&quot;).ToString.Length &gt; 0]" sap:VirtualizedContainerService.HintSize="483.2,516" sap2010:WorkflowViewState.IdRef="If_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="304.8,335.2" sap2010:WorkflowViewState.IdRef="Sequence_16">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LookupDataTable LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" RowIndex="{x:Null}" TargetColumnIndex="{x:Null}" TargetDataColumn="{x:Null}" sap2010:Annotation.AnnotationText="1-4. 인수에서 가져온 데이터 테이블에서 최종 데이터 테이블의 검색용 키워드에 해당하는 판매지수를 찾아" DataTable="[dtBookList]" DisplayName="Lookup Data Table" sap:VirtualizedContainerService.HintSize="263.2,98.4" sap2010:WorkflowViewState.IdRef="LookupDataTable_1" LookupColumnName="검색용 키워드" LookupValue="[row(&quot;검색용 키워드&quot;).ToString]" TargetColumnName="판매지수">
                    <ui:LookupDataTable.CellValue>
                      <OutArgument x:TypeArguments="ui:GenericValue">[intSalePoint]</OutArgument>
                    </ui:LookupDataTable.CellValue>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LookupDataTable>
                  <Assign sap2010:Annotation.AnnotationText="최종 데이터 테이블의 판매지수 열에 넣는다." sap:VirtualizedContainerService.HintSize="263.2,104" sap2010:WorkflowViewState.IdRef="Assign_1">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[row("판매지수")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[intSalePoint]</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                </Sequence>
              </If.Then>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
    <ui:FilterDataTable sap2010:Annotation.AnnotationText="1-5. 최종 데이터 테이블에서 판매지수 열만 빼고 나머지는 모두 삭제한다." DataTable="[dtKeyAndPoint]" DisplayName="Filter Data Table" sap:VirtualizedContainerService.HintSize="652.8,112.8" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[dtKeyAndPoint]" SelectColumnsMode="Keep">
      <ui:FilterDataTable.Filters>
        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
          <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
        </scg:List>
      </ui:FilterDataTable.Filters>
      <ui:FilterDataTable.SelectColumns>
        <scg:List x:TypeArguments="InArgument" Capacity="4">
          <InArgument x:TypeArguments="x:String">["판매지수"]</InArgument>
        </scg:List>
      </ui:FilterDataTable.SelectColumns>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:FilterDataTable>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="652.8,299.2" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_6" WorkbookPath="도서목록.xlsx">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="241.6,189.6" sap2010:WorkflowViewState.IdRef="Sequence_15">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelWriteRange AddHeaders="False" sap2010:Annotation.AnnotationText="1-6. 판매지수 열을 엑셀 파일의 오늘 날짜 열에 덮어쓴다." DataTable="[dtKeyAndPoint]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="200,96.8" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_7" SheetName="Sheet1" StartingCell="L2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelWriteRange>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
  </Sequence>
</Activity>