<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1533,827" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="24">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="34">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
      <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Flowchart sap:VirtualizedContainerService.HintSize="734,636" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dtData1" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtData2" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtCheckData" />
      <Variable x:TypeArguments="s:String[]" Name="arrColumnName" />
      <Variable x:TypeArguments="x:Int32" Name="intRowIndex" />
      <Variable x:TypeArguments="x:String" Name="strKeyColumn" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtTemp" />
      <Variable x:TypeArguments="ui:GenericValue" Name="strFile1" />
      <Variable x:TypeArguments="ui:GenericValue" Name="strFile2" />
      <Variable x:TypeArguments="ui:GenericValue" Name="strFolder" />
      <Variable x:TypeArguments="ui:GenericValue" Name="strFileTemp" />
      <Variable x:TypeArguments="ui:GenericValue" Name="strFileResult" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">300,2.4</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">330,77.6 330,107.6 200,107.6 200,130</av:PointCollection>
        <x:Double x:Key="Width">700</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID4</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">380,130</av:Point>
          <av:Size x:Key="ShapeSize">200,97</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">480,227 480,257 480.1,257 480.1,276.4</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="2. 파일 분석하기" sap:VirtualizedContainerService.HintSize="200,97" sap2010:WorkflowViewState.IdRef="Sequence_11">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="2-1. 첫 번째 파일 읽기" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="574.4,200.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" WorkbookPath="[strFolder + strFile1]">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <ui:ExcelReadRange AddHeaders="True" DataTable="[dtData1]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_3" SheetName="Sheet1">
                <ui:ExcelReadRange.Range>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </ui:ExcelReadRange.Range>
              </ui:ExcelReadRange>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ExcelApplicationScope>
        <Sequence sap2010:Annotation.AnnotationText="2-2. 열 추가하기" sap:VirtualizedContainerService.HintSize="574.4,364.8" sap2010:WorkflowViewState.IdRef="Sequence_68">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:AddDataColumn x:TypeArguments="x:String" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" sap2010:Annotation.AnnotationText="&quot;비교데이터&quot;" ColumnName="비교데이터" DataTable="[dtData1]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="200,53.6" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddDataColumn>
          <ui:AddDataColumn x:TypeArguments="x:String" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" sap2010:Annotation.AnnotationText="&quot;행중복&quot;" ColumnName="행중복" DataTable="[dtData1]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="200,53.6" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddDataColumn>
          <ui:AddDataColumn x:TypeArguments="x:String" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" sap2010:Annotation.AnnotationText="&quot;키중복&quot;" ColumnName="키중복" DataTable="[dtData1]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="200,53.6" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_19">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddDataColumn>
        </Sequence>
        <ui:ForEachRow sap2010:Annotation.AnnotationText="2-3. 추가한 열에 값과 수식 입력하기" CurrentIndex="[intRowIndex]" DataTable="[dtData1]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="574.4,713.6" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="524.8,533.6" sap2010:WorkflowViewState.IdRef="Sequence_80">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[row("비교데이터")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Object">[string.join(",", row.ItemArray.ToArray)]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[row("행중복")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Object" xml:space="preserve">["=COUNTIF(Sheet2!"+ arrColumnName(row.ItemArray.Count-3)  +":"+ arrColumnName(row.ItemArray.Count-3)  +","+ arrColumnName(row.ItemArray.Count-3)  + (intRowIndex + 2).ToString +")"]</InArgument>
                  </Assign.Value>
                </Assign>
                <If sap2010:Annotation.AnnotationText="키 열이 있으면..." Condition="[strKeyColumn.Length &gt; 0]" sap:VirtualizedContainerService.HintSize="483.2,240.8" sap2010:WorkflowViewState.IdRef="If_14">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Assign sap:VirtualizedContainerService.HintSize="263.2,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[row("키중복")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String" xml:space="preserve">["=COUNTIF(Sheet2!"+  strKeyColumn  +":"+ strKeyColumn  +","+ strKeyColumn  + (intRowIndex + 2).ToString +")"]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                </If>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEachRow>
        <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="2-4. 두 번째 파일 읽기" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="574.4,200.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_21" WorkbookPath="[strFolder + strFile2]">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <ui:ExcelReadRange AddHeaders="True" DataTable="[dtData2]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_9" SheetName="Sheet1">
                <ui:ExcelReadRange.Range>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </ui:ExcelReadRange.Range>
              </ui:ExcelReadRange>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ExcelApplicationScope>
        <Sequence sap2010:Annotation.AnnotationText="2-5. 열 추가하기" sap:VirtualizedContainerService.HintSize="574.4,364.8" sap2010:WorkflowViewState.IdRef="Sequence_73">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:AddDataColumn x:TypeArguments="x:String" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" sap2010:Annotation.AnnotationText="&quot;비교데이터&quot;" ColumnName="비교데이터" DataTable="[dtData2]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="200,53.6" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_16">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddDataColumn>
          <ui:AddDataColumn x:TypeArguments="x:String" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" sap2010:Annotation.AnnotationText="&quot;행중복&quot;" ColumnName="행중복" DataTable="[dtData2]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="200,53.6" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_17">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddDataColumn>
          <ui:AddDataColumn x:TypeArguments="x:String" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" sap2010:Annotation.AnnotationText="&quot;키중복&quot;" ColumnName="키중복" DataTable="[dtData2]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="200,53.6" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_20">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddDataColumn>
        </Sequence>
        <ui:ForEachRow sap2010:Annotation.AnnotationText="2-6. 추가한 열에 값과 수식 입력하기" CurrentIndex="[intRowIndex]" DataTable="[dtData2]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="574.4,713.6" sap2010:WorkflowViewState.IdRef="ForEachRow_16">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="524.8,533.6" sap2010:WorkflowViewState.IdRef="Sequence_81">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[row("비교데이터")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Object">[string.join(",", row.ItemArray.ToArray)]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[row("행중복")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Object" xml:space="preserve">["=COUNTIF(Sheet1!"+ arrColumnName(row.ItemArray.Count-3)  +":"+ arrColumnName(row.ItemArray.Count-3)  +","+ arrColumnName(row.ItemArray.Count-3)  + (intRowIndex + 2).ToString +")"]</InArgument>
                  </Assign.Value>
                </Assign>
                <If sap2010:Annotation.AnnotationText="키 열이 있으면..." Condition="[strKeyColumn.Length &gt; 0]" sap:VirtualizedContainerService.HintSize="483.2,240.8" sap2010:WorkflowViewState.IdRef="If_16">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Assign sap:VirtualizedContainerService.HintSize="263.2,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[row("키중복")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String" xml:space="preserve">["=COUNTIF(Sheet1!"+  strKeyColumn  +":"+ strKeyColumn  +","+ strKeyColumn  + (intRowIndex + 2).ToString +")"]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                </If>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEachRow>
        <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="2-7. 임시 파일에 저장하기" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="574.4,449.6" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_22" WorkbookPath="[strFolder + strFileTemp]">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="375.2,308.8" sap2010:WorkflowViewState.IdRef="Sequence_77">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelWriteRange AddHeaders="True" DataTable="[dtData1]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_14" SheetName="Sheet1" StartingCell="A1" />
                <ui:ExcelWriteRange AddHeaders="True" DataTable="[dtData2]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_13" SheetName="Sheet2" StartingCell="A1" />
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ExcelApplicationScope>
      </Sequence>
      <FlowStep.Next>
        <FlowDecision x:Name="__ReferenceID3" Condition="[strKeyColumn.Length &gt; 0]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="81,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <av:Point x:Key="ShapeLocation">439.6,276.4</av:Point>
              <av:Size x:Key="ShapeSize">81,87</av:Size>
              <av:PointCollection x:Key="TrueConnector">439.6,319.9 409.6,319.9 409.6,357.6 290,357.6</av:PointCollection>
              <av:PointCollection x:Key="FalseConnector">520.6,319.9 610,319.9 610,448.5 580,448.5</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <FlowDecision.True>
            <FlowStep x:Name="__ReferenceID1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">90,303.6</av:Point>
                  <av:Size x:Key="ShapeSize">200,108</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">90,357.6 60,357.6 60,448.5 380,448.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence sap2010:Annotation.AnnotationText="3. 삭제된 행을 임시 파일과 결과 파일에 추가" sap:VirtualizedContainerService.HintSize="200,108" sap2010:WorkflowViewState.IdRef="Sequence_16">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="3-1. 임시 파일에서 삭제된 행을 찾아 추가하기" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="433.6,96.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_23" WorkbookPath="[strFolder + strFileTemp]">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="375.2,474.4" sap2010:WorkflowViewState.IdRef="Sequence_83">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelReadRange AddHeaders="True" DataTable="[dtCheckData]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_10" SheetName="Sheet1">
                          <ui:ExcelReadRange.Range>
                            <InArgument x:TypeArguments="x:String">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                          </ui:ExcelReadRange.Range>
                        </ui:ExcelReadRange>
                        <ui:FilterDataTable sap2010:Annotation.AnnotationText="3-2. 삭제된 행만 남기고 키 중복 열 없애기" DataTable="[dtCheckData]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="333.6,91.2" sap2010:WorkflowViewState.IdRef="FilterDataTable_5" OutputDataTable="[dtCheckData]" SelectColumnsMode="Remove">
                          <ui:FilterDataTable.Filters>
                            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                              <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                <ui:FilterOperationArgument.Column>
                                  <InArgument x:TypeArguments="x:String">["키중복"]</InArgument>
                                </ui:FilterOperationArgument.Column>
                                <ui:FilterOperationArgument.Operand>
                                  <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                </ui:FilterOperationArgument.Operand>
                              </ui:FilterOperationArgument>
                            </scg:List>
                          </ui:FilterDataTable.Filters>
                          <ui:FilterDataTable.SelectColumns>
                            <scg:List x:TypeArguments="InArgument" Capacity="4">
                              <InArgument x:TypeArguments="x:String">["키중복"]</InArgument>
                            </scg:List>
                          </ui:FilterDataTable.SelectColumns>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:FilterDataTable>
                        <ui:AddDataColumn x:TypeArguments="x:String" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="키중복" DataTable="[dtCheckData]" DefaultValue="2" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_21" />
                        <ui:ExcelAppendRange DataTable="[dtCheckData]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_4" SheetName="Sheet2" />
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelApplicationScope>
                <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="3-3. 불필요한 열을 지우고 결과 파일에 추가하기" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="433.6,452.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_24" WorkbookPath="[strFolder + strFileResult]">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="375.2,312" sap2010:WorkflowViewState.IdRef="Sequence_85">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:FilterDataTable sap2010:Annotation.AnnotationText="불필요한 열 지우기" DataTable="[dtCheckData]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="333.6,91.2" sap2010:WorkflowViewState.IdRef="FilterDataTable_6" OutputDataTable="[dtCheckData]" SelectColumnsMode="Remove">
                          <ui:FilterDataTable.Filters>
                            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                              <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="EQ" />
                            </scg:List>
                          </ui:FilterDataTable.Filters>
                          <ui:FilterDataTable.SelectColumns>
                            <scg:List x:TypeArguments="InArgument" Capacity="4">
                              <InArgument x:TypeArguments="x:String">["비교데이터"]</InArgument>
                              <InArgument x:TypeArguments="x:String">["행중복"]</InArgument>
                              <InArgument x:TypeArguments="x:String">["키중복"]</InArgument>
                            </scg:List>
                          </ui:FilterDataTable.SelectColumns>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:FilterDataTable>
                        <ui:ExcelAppendRange DataTable="[dtCheckData]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_5" SheetName="Sheet1" />
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelApplicationScope>
              </Sequence>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID0">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">380,400</av:Point>
                      <av:Size x:Key="ShapeSize">200,97</av:Size>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence sap2010:Annotation.AnnotationText="4. 결과 파일에 변경 표시" sap:VirtualizedContainerService.HintSize="200,97" sap2010:WorkflowViewState.IdRef="Sequence_34">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="4-1. 수식이 적용된 임시 파일 다시 읽기" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="1144,200.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_17" WorkbookPath="[strFolder + strFileTemp]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <ui:ExcelReadRange AddHeaders="True" DataTable="[dtCheckData]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_8" SheetName="Sheet2">
                            <ui:ExcelReadRange.Range>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </ui:ExcelReadRange.Range>
                          </ui:ExcelReadRange>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelApplicationScope>
                    <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="4-2. 행 중복과 키 열 여부 체크하기" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="1144,1842.4" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_18" WorkbookPath="[strFolder + strFileResult]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <ui:ForEachRow CurrentIndex="[intRowIndex]" DataTable="[dtCheckData]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="1110.4,1701.6" sap2010:WorkflowViewState.IdRef="ForEachRow_9">
                            <ui:ForEachRow.Body>
                              <ActivityAction x:TypeArguments="sd:DataRow">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                </ActivityAction.Argument>
                                <If sap2010:Annotation.AnnotationText="행 중복 체크하기" Condition="[row(&quot;행중복&quot;).ToString = &quot;0&quot;]" sap:VirtualizedContainerService.HintSize="1060.8,1552.8" sap2010:WorkflowViewState.IdRef="If_11">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <If sap2010:Annotation.AnnotationText="키 열 여부 체크하기" Condition="[strKeyColumn.Length &gt; 0]" sap:VirtualizedContainerService.HintSize="916.8,1372" sap2010:WorkflowViewState.IdRef="If_10">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Switch x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="4-3. 키 중복에 따라 변경 표시하기" DisplayName="Switch" Expression="[row(&quot;키중복&quot;).ToString]" sap:VirtualizedContainerService.HintSize="497.6,1191.2" sap2010:WorkflowViewState.IdRef="Switch`1_3">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Sequence x:Key="0" sap:VirtualizedContainerService.HintSize="375.2,243.2" sap2010:WorkflowViewState.IdRef="Sequence_54">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelSetRangeColor Color="[System.Drawing.Color.Yellow]" DisplayName="Set Range Color" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_12" Range="[&quot;A&quot; + (intRowIndex+2).ToString + &quot;:&quot; + arrColumnName(row.ItemArray.Count-3) + (intRowIndex+2).ToString]" SheetName="Sheet1" />
                                            <ui:ExcelWriteCell Cell="[arrColumnName(row.ItemArray.Count-3) + (intRowIndex+2).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_12" SheetName="Sheet1" Text="신규">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                          </Sequence>
                                          <Sequence x:Key="1" sap:VirtualizedContainerService.HintSize="375.2,243.2" sap2010:WorkflowViewState.IdRef="Sequence_55">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelSetRangeColor Color="[System.Drawing.Color.Green]" DisplayName="Set Range Color" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_13" Range="[&quot;A&quot; + (intRowIndex+2).ToString + &quot;:&quot; + arrColumnName(row.ItemArray.Count-3) + (intRowIndex+2).ToString]" SheetName="Sheet1" />
                                            <ui:ExcelWriteCell Cell="[arrColumnName(row.ItemArray.Count-3) + (intRowIndex+2).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_13" SheetName="Sheet1" Text="갱신">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                          </Sequence>
                                          <Sequence x:Key="2" sap:VirtualizedContainerService.HintSize="375.2,243.2" sap2010:WorkflowViewState.IdRef="Sequence_56">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelSetRangeColor Color="[System.Drawing.Color.Red]" DisplayName="Set Range Color" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_14" Range="[&quot;A&quot; + (intRowIndex+2).ToString + &quot;:&quot; + arrColumnName(row.ItemArray.Count-3) + (intRowIndex+2).ToString]" SheetName="Sheet1" />
                                            <ui:ExcelWriteCell Cell="[arrColumnName(row.ItemArray.Count-3) + (intRowIndex+2).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_14" SheetName="Sheet1" Text="삭제">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                          </Sequence>
                                        </Switch>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap2010:Annotation.AnnotationText="4-4. 행 중복만으로 변경 표시하기" sap:VirtualizedContainerService.HintSize="375.2,274.4" sap2010:WorkflowViewState.IdRef="Sequence_58">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelSetRangeColor Color="[System.Drawing.Color.Green]" DisplayName="Set Range Color" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_15" Range="[&quot;A&quot; + (intRowIndex+2).ToString + &quot;:&quot; + arrColumnName(row.ItemArray.Count-3) + (intRowIndex+2).ToString]" SheetName="Sheet1" />
                                          <ui:ExcelWriteCell Cell="[arrColumnName(row.ItemArray.Count-3) + (intRowIndex+2).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_15" SheetName="Sheet1" Text="신규/갱신">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:ExcelWriteCell>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </If.Then>
                                </If>
                              </ActivityAction>
                            </ui:ForEachRow.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ForEachRow>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelApplicationScope>
                  </Sequence>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowDecision.True>
          <FlowDecision.False>
            <x:Reference>__ReferenceID0</x:Reference>
          </FlowDecision.False>
        </FlowDecision>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID1</x:Reference>
    <FlowStep x:Name="__ReferenceID4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">100,130</av:Point>
          <av:Size x:Key="ShapeSize">200,97</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,178.5 380,178.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="1. 변수 설정 및 파일 준비" sap:VirtualizedContainerService.HintSize="476,1254" sap2010:WorkflowViewState.IdRef="Sequence_29">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:MultipleAssign sap2010:Annotation.AnnotationText="1-1. 주요 변수 설정하기" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="434,315" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
          <ui:MultipleAssign.AssignOperations>
            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[strKeyColumn]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">A</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="ui:GenericValue">[strFolder]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="ui:GenericValue">["D:\big\RPA\rpa-master\rpa-master\9.엑셀파일_비교분석\비교데이터"]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="ui:GenericValue">[strFile1]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="ui:GenericValue">["데이터1.xlsx"]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="ui:GenericValue">[strFile2]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="ui:GenericValue">["데이터2.xlsx"]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="ui:GenericValue">[strFileTemp]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="ui:GenericValue">["임시파일.xlsx"]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="ui:GenericValue">[strFileResult]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="ui:GenericValue">["비교결과.xlsx"]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="s:String[]">[arrColumnName]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="s:String[]">[{"A", "B", "C", "D","E","F","G","H","I","J","K","L","M","N","O","P"}]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
            </scg:List>
          </ui:MultipleAssign.AssignOperations>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:MultipleAssign>
        <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="1-2. 임시 파일과 시트 만들기" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,545" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_10" WorkbookPath="[strFolder + strFileTemp]">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="376,405" sap2010:WorkflowViewState.IdRef="Sequence_28">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:BuildDataTable DataTable="[dtTemp]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Column1&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Column1&gt;text&lt;/Column1&gt;&#xA;  &lt;/TableName&gt;&#xA;&lt;/NewDataSet&gt;">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:BuildDataTable>
                <ui:ExcelWriteRange AddHeaders="True" DataTable="[dtTemp]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_7" SheetName="Sheet1" StartingCell="A1" />
                <ui:ExcelWriteRange AddHeaders="True" DataTable="[dtTemp]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_8" SheetName="Sheet2" StartingCell="A1" />
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ExcelApplicationScope>
        <ui:CopyFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="1-3. 비교 결과를 저장할 파일 만들기" Destination="[strFolder + strFileResult]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="433.6,191.2" sap2010:WorkflowViewState.IdRef="CopyFile_3" Overwrite="True" Path="[strFolder + strFile2]">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:CopyFile>
      </Sequence>
      <FlowStep.Next>
        <x:Reference>__ReferenceID2</x:Reference>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
  </Flowchart>
</Activity>